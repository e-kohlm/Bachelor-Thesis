line: 0	code: import hashlib	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9613713026046753}]
line: 1	code: import inspect	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9960914254188538}]
line: 2	code: import logging	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9976012110710144}]
line: 3	code: import os	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974647760391235}]
line: 4	code: import re	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9992876648902893}]
line: 5	code: import sys	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9985743761062622}]
line: 6	code: import tempfile	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9976183772087097}]
line: 7	code: import csv	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9749553203582764}]
line: 8	code: import gzip	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9994113445281982}]
line: 9	code: from datetime import datetime	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9980068802833557}]
line: 10	code: from time import time	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9859532117843628}]
line: 11	code: from io import StringIO	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9815396666526794}]
line: 12	code: from sqlalchemy import event	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9842958450317383}]
line: 13	code: from sqlalchemy.engine import Engine	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9691590070724487}]
line: 14	code: from sqlalchemy.schema import DropTable	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9711552858352661}]
line: 15	code: from sqlalchemy.ext.compiler import compiles	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9860010743141174}]
line: 16	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 17	code: import pandas	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9934906959533691}]
line: 18	code: import sqlalchemy	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.7932897210121155}]
line: 19	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 20	code: import lore	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995716214179993}]
line: 21	code: from lore.util import timer	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998816251754761}]
line: 22	code: from lore.stores import query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997466206550598}]
line: 23	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 24	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 25	code: logger = logging.getLogger(__name__)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996203184127808}]
line: 26	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 27	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 28	code: @compiles(DropTable, 'postgresql')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998177886009216}]
line: 29	code: def _compile_drop_table(element, compiler, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999481439590454}]
line: 30	code:     return compiler.visit_drop_table(element) + ' CASCADE'	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998637437820435}]
line: 31	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 32	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 33	code: class Connection(object):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998302459716797}]
line: 34	code:     UNLOAD_PREFIX = os.path.join(lore.env.name, 'unloads')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997902512550354}]
line: 35	code:     IAM_ROLE = os.environ.get('IAM_ROLE', None)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999935626983643}]
line: 36	code:     	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990146160125732}]
line: 37	code:     def __init__(self, url, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998369216918945}]
line: 38	code:         for int_value in ['pool_size', 'pool_recycle', 'max_overflow']:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993165731430054}]
line: 39	code:             if int_value in kwargs:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997707009315491}]
line: 40	code:                 kwargs[int_value] = int(kwargs[int_value])	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999940395355225}]
line: 41	code:         if 'poolclass' in kwargs:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993409514427185}]
line: 42	code:             kwargs['poolclass'] = getattr(sqlalchemy.pool, kwargs['poolclass'])	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999114274978638}]
line: 43	code:         if '__name__' in kwargs:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999057054519653}]
line: 44	code:             del kwargs['__name__']	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999759197235107}]
line: 45	code:         self._engine = sqlalchemy.create_engine(url, **kwargs)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9964467883110046}]
line: 46	code:         self._connection = None	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997567534446716}]
line: 47	code:         self._metadata = None	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999479055404663}]
line: 48	code:         self._transactions = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999270439147949}]
line: 49	code:     	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990146160125732}]
line: 50	code:     def __enter__(self):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993017911911011}]
line: 51	code:         if self._connection is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990431666374207}]
line: 52	code:             self._connection = self._engine.connect()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997896552085876}]
line: 53	code:         self._transactions.append(self._connection.begin())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997815489768982}]
line: 54	code:         return self	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9952645301818848}]
line: 55	code:     	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990146160125732}]
line: 56	code:     def __exit__(self, type, value, traceback):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995622038841248}]
line: 57	code:         transaction = self._transactions.pop()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999483823776245}]
line: 58	code:         if type is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9994600415229797}]
line: 59	code:             transaction.commit()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9980089068412781}]
line: 60	code:         else:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990195035934448}]
line: 61	code:             transaction.rollback()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9994206428527832}]
line: 62	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 63	code:     @staticmethod	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999706745147705}]
line: 64	code:     def path(filename, extension='.sql'):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9966974258422852}]
line: 65	code:         return os.path.join(	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999004602432251}]
line: 66	code:             lore.env.root, lore.env.project, 'extracts',	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999707937240601}]
line: 67	code:             filename + extension)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999608993530273}]
line: 68	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 69	code:     def execute(self, sql=None, filename=None, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9338670969009399}]
line: 70	code:         self.__execute(self.__prepare(sql, filename), kwargs)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.8844196200370789}]
line: 71	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 72	code:     def insert(self, table, dataframe, batch_size=None):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9953697323799133}]
line: 73	code:         if batch_size is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998364448547363}]
line: 74	code:             batch_size = len(dataframe)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999927282333374}]
line: 75	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 76	code:         if self._connection is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990431666374207}]
line: 77	code:             self._connection = self._engine.connect()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997896552085876}]
line: 78	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 79	code:         dataframe.to_sql(	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993098974227905}]
line: 80	code:             table,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9858001470565796}]
line: 81	code:             self._connection,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9982730150222778}]
line: 82	code:             if_exists='append',	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999784231185913}]
line: 83	code:             index=False,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999922513961792}]
line: 84	code:             chunksize=batch_size	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999651908874512}]
line: 85	code:         )	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9984263181686401}]
line: 86	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 87	code:     def replace(self, table, dataframe, batch_size=None):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9984163045883179}]
line: 88	code:         import migrate.changeset	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999192953109741}]
line: 89	code:         global _after_replace_callbacks	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999978542327881}]
line: 90	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 91	code:         with timer('REPLACE ' + table):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9797844886779785}]
line: 92	code:             suffix = datetime.now().strftime('_%Y%m%d%H%M%S').encode('utf-8')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999803304672241}]
line: 93	code:             self.metadata	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999377727508545}]
line: 94	code:             temp = 'tmp_'.encode('utf-8')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999715089797974}]
line: 95	code:             source = sqlalchemy.Table(table, self.metadata, autoload=True, autoload_with=self._engine)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9977923631668091}]
line: 96	code:             destination_name = 'tmp_' + hashlib.sha256(temp + table.encode('utf-8') + suffix).hexdigest()[0:56]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999773502349854}]
line: 97	code:             destination = sqlalchemy.Table(destination_name, self.metadata, autoload=False)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999377727508545}]
line: 98	code:             for column in source.columns:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9948280453681946}]
line: 99	code:                 destination.append_column(column.copy())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999570846557617}]
line: 100	code:             destination.create()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999580383300781}]
line: 101	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 102	code:             original_names = {}	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999710321426392}]
line: 103	code:             for index in source.indexes:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9958422780036926}]
line: 104	code:                 # make sure the name is < 63 chars with the suffix	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999598264694214}]
line: 105	code:                 name = hashlib.sha256(temp + index.name.encode('utf-8') + suffix).hexdigest()[0:60]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999940395355225}]
line: 106	code:                 original_names[name] = index.name	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999986886978149}]
line: 107	code:                 columns = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995914101600647}]
line: 108	code:                 for column in index.columns:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9968335032463074}]
line: 109	code:                     columns.append(next(x for x in destination.columns if x.name == column.name))	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999802112579346}]
line: 110	code:                 new = sqlalchemy.Index(name, *columns)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995703101158142}]
line: 111	code:                 new.unique = index.unique	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999972581863403}]
line: 112	code:                 new.table = destination	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996083378791809}]
line: 113	code:                 new.create(bind=self._connection)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996293783187866}]
line: 114	code:             self.insert(destination.name, dataframe, batch_size=batch_size)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999393224716187}]
line: 115	code:             self.execute("BEGIN; SET LOCAL statement_timeout = '1min'; ANALYZE %s; COMMIT;" % table)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.625705897808075}]
line: 116	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 117	code:             with self as transaction:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.995515763759613}]
line: 118	code:                 backup = sqlalchemy.Table(table + '_b', self.metadata)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997645020484924}]
line: 119	code:                 backup.drop(bind=self._connection, checkfirst=True)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999527931213379}]
line: 120	code:                 source.rename(name=source.name + '_b', connection=self._connection)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999955415725708}]
line: 121	code:                 destination.rename(name=table, connection=self._connection)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9985259175300598}]
line: 122	code:                 for index in source.indexes:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.995686411857605}]
line: 123	code:                     index.rename(index.name[0:-2] + '_b', connection=self._connection)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999907374382019}]
line: 124	code:                 for index in destination.indexes:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9994550347328186}]
line: 125	code:                     index.rename(original_names[index.name], connection=self._connection)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999675750732422}]
line: 126	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 127	code:         for func in _after_replace_callbacks:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999426603317261}]
line: 128	code:             func(destination, source)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9994903802871704}]
line: 129	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 130	code:     @property	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999531507492065}]
line: 131	code:     def metadata(self):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995415210723877}]
line: 132	code:         if not self._metadata:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998410940170288}]
line: 133	code:             self._metadata = sqlalchemy.MetaData(bind=self._engine)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990525841712952}]
line: 134	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 135	code:         return self._metadata	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999837875366211}]
line: 136	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 137	code:     def select(self, sql=None, filename=None, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.943811297416687}]
line: 138	code:         cache = kwargs.pop('cache', False)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999914169311523}]
line: 139	code:         sql = self.__prepare(sql, filename)	prediction: [{'label': 'VULNERABLE', 'score': 0.8092210292816162}]
line: 140	code:         return self._select(sql, kwargs, cache=cache)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.7580353021621704}]
line: 141	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 142	code:     @query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974976181983948}]
line: 143	code:     def _select(self, sql, bindings):	prediction: [{'label': 'VULNERABLE', 'score': 0.8176052570343018}]
line: 144	code:         return self.__execute(sql, bindings).fetchall()	prediction: [{'label': 'VULNERABLE', 'score': 0.8564916849136353}]
line: 145	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 146	code:     def unload(self, sql=None, filename=None, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9437513947486877}]
line: 147	code:         cache = kwargs.pop('cache', False)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999914169311523}]
line: 148	code:         sql = self.__prepare(sql, filename)	prediction: [{'label': 'VULNERABLE', 'score': 0.8092210292816162}]
line: 149	code:         return self._unload(sql, kwargs, cache=cache)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9847753643989563}]
line: 150	code:     	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990146160125732}]
line: 151	code:     @query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974976181983948}]
line: 152	code:     def _unload(self, sql, bindings):	prediction: [{'label': 'VULNERABLE', 'score': 0.6431830525398254}]
line: 153	code:         key = hashlib.sha1(str(sql).encode('utf-8')).hexdigest()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993401169776917}]
line: 154	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 155	code:         match = re.match(r'.*?select\s(.*)from.*', sql, flags=re.IGNORECASE | re.UNICODE | re.DOTALL)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9957281947135925}]
line: 156	code:         if match:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9987514019012451}]
line: 157	code:             columns = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996310472488403}]
line: 158	code:             nested = 0	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9992245435714722}]
line: 159	code:             potential = match[1].split(',')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999809265136719}]
line: 160	code:             for column in potential:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9991211295127869}]
line: 161	code:                 nested += column.count('(')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999987006187439}]
line: 162	code:                 nested -= column.count(')')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999827146530151}]
line: 163	code:                 if nested == 0:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993410706520081}]
line: 164	code:                     columns.append(column.split()[-1].split('.')[-1].strip())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999294281005859}]
line: 165	code:                 elif column == potential[-1]:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999529123306274}]
line: 166	code:                     column = re.split('from', column, flags=re.IGNORECASE)[0].strip()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998169541358948}]
line: 167	code:                     columns.append(column.split()[-1].split('.')[-1].strip())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999294281005859}]
line: 168	code:         else:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990195035934448}]
line: 169	code:             columns = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996310472488403}]
line: 170	code:         logger.warning("Redshift unload requires poorly parsing column names from sql, found: {}".format(columns))	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9916207790374756}]
line: 171	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 172	code:         sql = "UNLOAD ('" + sql.replace('\\', '\\\\').replace("'", "\\'") + "') "	prediction: [{'label': 'VULNERABLE', 'score': 0.8886820673942566}]
line: 173	code:         sql += "TO 's3://" + os.path.join(	prediction: [{'label': 'VULNERABLE', 'score': 0.7771528959274292}]
line: 174	code:             lore.io.bucket.name,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999648332595825}]
line: 175	code:             self.UNLOAD_PREFIX,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999637603759766}]
line: 176	code:             key,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993588328361511}]
line: 177	code:             ''	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9991207718849182}]
line: 178	code:         ) + "' "	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988486766815186}]
line: 179	code:         if Connection.IAM_ROLE:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999185800552368}]
line: 180	code:             sql += "IAM_ROLE '" + Connection.IAM_ROLE + "' "	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.739601194858551}]
line: 181	code:         sql += "DELIMITER '|' ADDQUOTES GZIP ALLOWOVERWRITE"	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.591016948223114}]
line: 182	code:         if re.match(r'(.*?)(limit\s+\d+)(.*)', sql, re.IGNORECASE | re.UNICODE | re.DOTALL):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.5111649036407471}]
line: 183	code:             logger.warning('LIMIT clause is not supported by unload, returning full set.')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988172054290771}]
line: 184	code:             sql = re.sub(r'(.*?)(limit\s+\d+)(.*)', r'\1\3', sql, flags=re.IGNORECASE | re.UNICODE | re.DOTALL)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.7637883424758911}]
line: 185	code:         self.__execute(sql, bindings)	prediction: [{'label': 'VULNERABLE', 'score': 0.896355926990509}]
line: 186	code:         return key, columns	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9984306693077087}]
line: 187	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 188	code:     @query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974976181983948}]
line: 189	code:     def load(self, key, columns):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9917289614677429}]
line: 190	code:         result = [columns]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9967700242996216}]
line: 191	code:         with timer('load:'):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9968388080596924}]
line: 192	code:             for entry in lore.io.bucket.objects.filter(	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999723434448242}]
line: 193	code:                 Prefix=os.path.join(self.UNLOAD_PREFIX, key)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999666213989258}]
line: 194	code:             ):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998871088027954}]
line: 195	code:                 temp = tempfile.NamedTemporaryFile()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999133348464966}]
line: 196	code:                 lore.io.bucket.download_file(entry.key, temp.name)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998975992202759}]
line: 197	code:                 with gzip.open(temp.name, 'rt') as gz:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998952150344849}]
line: 198	code:                     result += list(csv.reader(gz, delimiter='|', quotechar='"'))	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9993020296096802}]
line: 199	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 200	code:             return result	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9965274930000305}]
line: 201	code:     	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990146160125732}]
line: 202	code:     @query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974976181983948}]
line: 203	code:     def load_dataframe(self, key, columns):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9995056390762329}]
line: 204	code:         with timer('load_dataframe:'):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.99750816822052}]
line: 205	code:             frames = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999663829803467}]
line: 206	code:             for entry in lore.io.bucket.objects.filter(	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999723434448242}]
line: 207	code:                 Prefix=os.path.join(self.UNLOAD_PREFIX, key)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999666213989258}]
line: 208	code:             ):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998871088027954}]
line: 209	code:                 temp = tempfile.NamedTemporaryFile()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999133348464966}]
line: 210	code:                 lore.io.bucket.download_file(entry.key, temp.name)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998975992202759}]
line: 211	code:                 dataframe = pandas.read_csv(	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997888207435608}]
line: 212	code:                     temp.name,	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999173879623413}]
line: 213	code:                     delimiter='|',	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999496936798096}]
line: 214	code:                     quotechar='"',	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9905574321746826}]
line: 215	code:                     compression='gzip',	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998898506164551}]
line: 216	code:                     error_bad_lines=False	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999914169311523}]
line: 217	code:                 )	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9976289868354797}]
line: 218	code:                 dataframe.columns = columns	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999910593032837}]
line: 219	code:                 frames.append(dataframe)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998961687088013}]
line: 220	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 221	code:             result = pandas.concat(frames)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998680353164673}]
line: 222	code:             result.columns = columns	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999620914459229}]
line: 223	code:             buffer = StringIO()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9981012940406799}]
line: 224	code:             result.info(buf=buffer, memory_usage='deep')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998772144317627}]
line: 225	code:             logger.info(buffer.getvalue())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988709092140198}]
line: 226	code:             logger.info(result.head())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997836947441101}]
line: 227	code:             return result	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9965274930000305}]
line: 228	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 229	code:     def dataframe(self, sql=None, filename=None, **kwargs):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9976728558540344}]
line: 230	code:         cache = kwargs.pop('cache', False)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999914169311523}]
line: 231	code:         sql = self.__prepare(sql, filename)	prediction: [{'label': 'VULNERABLE', 'score': 0.8092210292816162}]
line: 232	code:         dataframe = self._dataframe(sql, kwargs, cache=cache)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997449517250061}]
line: 233	code:         buffer = StringIO()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9984772801399231}]
line: 234	code:         dataframe.info(buf=buffer, memory_usage='deep')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999063014984131}]
line: 235	code:         logger.info(buffer.getvalue())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988954067230225}]
line: 236	code:         logger.info(dataframe.head())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998679161071777}]
line: 237	code:         return dataframe	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9992849230766296}]
line: 238	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 239	code:     @query_cached	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9974976181983948}]
line: 240	code:     def _dataframe(self, sql, bindings):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9190364480018616}]
line: 241	code:         with timer("dataframe:"):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9992302656173706}]
line: 242	code:             if self._connection is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988553524017334}]
line: 243	code:                 self._connection = self._engine.connect()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.998641312122345}]
line: 244	code:             dataframe = pandas.read_sql(sql=sql, con=self._connection, params=bindings)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9988213181495667}]
line: 245	code:             return dataframe	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997233748435974}]
line: 246	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 247	code:     def quote_identifier(self, identifier):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998363256454468}]
line: 248	code:         return self._engine.dialect.identifier_preparer.quote(identifier)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998912811279297}]
line: 249	code:         	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9996059536933899}]
line: 250	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 251	code:     def __prepare(self, sql, filename):	prediction: [{'label': 'VULNERABLE', 'score': 0.6153664588928223}]
line: 252	code:         if sql is None and filename is not None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.8166705369949341}]
line: 253	code:             filename = Connection.path(filename, '.sql')	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999233484268188}]
line: 254	code:             logger.debug("READ SQL FILE: " + filename)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9202930927276611}]
line: 255	code:             with open(filename) as file:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9467067718505859}]
line: 256	code:                 sql = file.read()	prediction: [{'label': 'VULNERABLE', 'score': 0.7249675393104553}]
line: 257	code:         # support mustache style bindings	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997045397758484}]
line: 258	code:         sql = re.sub(r'\{(\w+?)\}', r'%(\1)s', sql)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.5826330780982971}]
line: 259	code:         return sql	prediction: [{'label': 'VULNERABLE', 'score': 0.9427208304405212}]
line: 260	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 261	code:     def __execute(self, sql, bindings):	prediction: [{'label': 'VULNERABLE', 'score': 0.9298406839370728}]
line: 262	code:         if self._connection is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990431666374207}]
line: 263	code:             self._connection = self._engine.connect()	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9997896552085876}]
line: 264	code:         return self._connection.execute(sql, bindings)	prediction: [{'label': 'VULNERABLE', 'score': 0.9983330368995667}]
line: 265	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 266	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 267	code: @event.listens_for(Engine, "before_cursor_execute", retval=True)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999855756759644}]
line: 268	code: def comment_sql_calls(conn, cursor, statement, parameters, context, executemany):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9867866039276123}]
line: 269	code:     conn.info.setdefault('query_start_time', []).append(datetime.now())	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9934718608856201}]
line: 270	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 271	code:     stack = inspect.stack()[1:-1]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999423027038574}]
line: 272	code:     if sys.version_info.major == 3:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9998385906219482}]
line: 273	code:         stack = [(x.filename, x.lineno, x.function) for x in stack]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999784231185913}]
line: 274	code:     else:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990394711494446}]
line: 275	code:         stack = [(x[1], x[2], x[3]) for x in stack]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999686479568481}]
line: 276	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 277	code:     paths = [x[0] for x in stack]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999906063079834}]
line: 278	code:     origin = next((x for x in paths if lore.env.project in x), None)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999970197677612}]
line: 279	code:     if origin is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999864101409912}]
line: 280	code:         origin = next((x for x in paths if 'sqlalchemy' not in x), None)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999842643737793}]
line: 281	code:     if origin is None:	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999864101409912}]
line: 282	code:         origin = paths[0]	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.999985933303833}]
line: 283	code:     caller = next(x for x in stack if x[0] == origin)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999923706054688}]
line: 284	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 285	code:     statement = "/* %s | %s:%d in %s */\n" % (lore.env.project, caller[0], caller[1], caller[2]) + statement	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.8809542655944824}]
line: 286	code:     logger.debug(statement)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9990068078041077}]
line: 287	code:     return statement, parameters	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9921682476997375}]
line: 288	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 289	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 290	code: @event.listens_for(Engine, "after_cursor_execute")	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999819993972778}]
line: 291	code: def time_sql_calls(conn, cursor, statement, parameters, context, executemany):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9897304773330688}]
line: 292	code:     total = datetime.now() - conn.info['query_start_time'].pop(-1)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.99556964635849}]
line: 293	code:     logger.info("SQL: %s" % total)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.7477977275848389}]
line: 294	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 295	code: 	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9662707448005676}]
line: 296	code: _after_replace_callbacks = []	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999918937683105}]
line: 297	code: def after_replace(func):	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999359846115112}]
line: 298	code:     global _after_replace_callbacks	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999961853027344}]
line: 299	code:     _after_replace_callbacks.append(func)	prediction: [{'label': 'NOT VULNERABLE', 'score': 0.9999979734420776}]
